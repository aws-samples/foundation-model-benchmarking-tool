general:
  name: "llama3-8b-g5-inf2-stream"      
  model_name: "llama3-8b"
  
# AWS and SageMaker settings
aws:
  # AWS region, this parameter is templatized, no need to change
  region: {region}
  # SageMaker execution role used to run FMBench, this parameter is templatized, no need to change
  sagemaker_execution_role: {role_arn}
  # S3 bucket to which metrics, plots and reports would be written to
  bucket: {write_bucket}

# directory paths in the write bucket, no need to change these
dir_paths:
  data_prefix: data
  prompts_prefix: prompts
  all_prompts_file: all_prompts.csv
  metrics_dir: metrics
  models_dir: models
  metadata_dir: metadata

# S3 information for reading datasets, scripts and tokenizer
s3_read_data:
  # read bucket name, templatized, if left unchanged will default to sagemaker-fmbench-read-<region>-<account_id>
  read_bucket: {read_bucket}
  scripts_prefix: scripts
  
  # S3 prefix in the read bucket where deployment and inference scripts should be placed
  scripts_prefix: scripts
    
  # deployment and inference script files to be downloaded are placed in this list
  # only needed if you are creating a new deployment script or inference script
  # your HuggingFace token does need to be in this list and should be called "hf_token.txt"
  script_files:
  - hf_token.txt

  # configuration files (like this one) are placed in this prefix
  configs_prefix: configs

  # list of configuration files to download, for now only pricing.yml needs to be downloaded
  config_files:
  - pricing.yml

  # S3 prefix for the dataset files
  source_data_prefix: source_data
  # list of dataset files, the list below is from the LongBench dataset https://huggingface.co/datasets/THUDM/LongBench
  source_data_files:
  - 2wikimqa_e.jsonl
  - 2wikimqa.jsonl
  - hotpotqa_e.jsonl
  - hotpotqa.jsonl
  - narrativeqa.jsonl
  - triviaqa_e.jsonl
  - triviaqa.jsonl
  # S3 prefix for the tokenizer to be used with the models
  # NOTE 1: the same tokenizer is used with all the models being tested through a config file
  # NOTE 2: place your model specific tokenizers in a prefix named as <model_name>_tokenizer
  #         so the mistral tokenizer goes in mistral_tokenizer, Llama2 tokenizer goes in llama2_tokenizer and so on and so forth.
  tokenizer_prefix: llama3_tokenizer
  
  # S3 prefix for prompt templates
  prompt_template_dir: prompt_template

  # prompt template to use, NOTE: same prompt template gets used for all models being tested through a config file
  # the FMBench repo already contains a bunch of prompt templates so review those first before creating a new one
  prompt_template_file: prompt_template_llama3.txt


# steps to run, usually all of these would be
# set to yes so nothing needs to change here
# you could, however, bypass some steps for example
# set the 2_deploy_model.ipynb to no if you are re-running
# the same config file and the model is already deployed
run_steps:
    0_setup.ipynb: yes
    1_generate_data.ipynb: yes
    2_deploy_model.ipynb: yes
    3_run_inference.ipynb: yes
    4_model_metric_analysis.ipynb: yes
    5_cleanup.ipynb: yes

datasets:
  prompt_template_keys:
    - input
    - context
  filters:
    - language: en
      min_length_in_tokens: 1
      max_length_in_tokens: 500
      payload_file: payload_en_1-500.jsonl
    - language: en
      min_length_in_tokens: 500
      max_length_in_tokens: 1000
      payload_file: payload_en_500-1000.jsonl
    - language: en
      min_length_in_tokens: 1000
      max_length_in_tokens: 2000
      payload_file: payload_en_1000-2000.jsonl
    - language: en
      min_length_in_tokens: 2000
      max_length_in_tokens: 3000
      payload_file: payload_en_2000-3000.jsonl
    - language: en
      min_length_in_tokens: 3000
      max_length_in_tokens: 3840
      payload_file: payload_en_3000-3840.jsonl

metrics:
  dataset_of_interest: en_3000-3840

pricing: pricing.yml

inference_parameters:
  sagemaker:
    max_new_tokens: 100
    top_p: 0.92
    temperature: 0.1
    details: true
    stop: "<|eot_id|>"

# ----------------------------------------------------------------
# Anchor defining default experiment settings for DJL on SageMaker
# ----------------------------------------------------------------
experiments_defaults: &jumpstart_sagemaker_experiment
  model_version: "*"
  deploy: yes
  instance_count: 1
  deployment_script: jumpstart.py
  inference_script: sagemaker_predictor.py
  inference_spec:
    parameter_set: sagemaker
  # The payload files used for inference
  payload_files:
    - payload_en_1-500.jsonl
    - payload_en_500-1000.jsonl
    - payload_en_1000-2000.jsonl
    - payload_en_2000-3000.jsonl
    - payload_en_3000-3840.jsonl
  # Adjust concurrency levels as needed
  concurrency_levels:
    - 1
    - 2
    - 4
    - 5
    - 8
    - 10
    - 16
    - 20
  accept_eula: true
  env:
    SAGEMAKER_PROGRAM: "inference.py"
    ENDPOINT_SERVER_TIMEOUT: "3600"
    MODEL_CACHE_ROOT: "/opt/ml/model"
    SAGEMAKER_ENV: "1"
    HF_MODEL_ID: "/opt/ml/model"
    MAX_INPUT_LENGTH: "4095"
    MAX_TOTAL_TOKENS: "4096"

# ----------------------------------------------------------------
# Experiments Array
# ----------------------------------------------------------------
experiments:
  # Single experiment example â€” override fields that differ from the anchor
  - <<: *sagemaker_experiment
    name: "{{experiment_name}}"
    model_id: "{{model_id}}"
    hf_tokenizer_model_id: "{{hf_tokenizer_model_id}}"
    model_name: "{{model_name}}"
    ep_name: "{{ep_name}}"
    instance_type: "{{instance_type}}"
    image_uri: "763104351884.dkr.ecr.{{region}}.amazonaws.com/djl-inference:0.27.0-deepspeed0.12.6-cu121"

report:
  latency_budget: 5
  cost_per_10k_txn_budget: 30
  error_rate_budget: 0
  per_inference_request_file: per_inference_request_results.csv
  all_metrics_file: all_metrics.csv
  txn_count_for_showing_cost: 10000
  v_shift_w_single_instance: 0.025
  v_shift_w_gt_one_instance: 0.025